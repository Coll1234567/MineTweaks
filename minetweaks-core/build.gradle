plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'net.minecrell.plugin-yml.bukkit' version '0.5.3'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

dependencies {
    compileOnly("org.spigotmc:spigot-api:1.20.4-R0.1-SNAPSHOT")
    implementation (group: 'me.jishuna', name: 'jishlib', version: '2.0.0-SNAPSHOT')
    compileOnly group: "com.comphenix.protocol", name: "ProtocolLib", version: "5.0.0";
    bukkitLibrary "net.kyori:adventure-api:4.12.0"
    bukkitLibrary "net.kyori:adventure-platform-bukkit:4.2.0"
    bukkitLibrary "net.kyori:adventure-text-minimessage:4.12.0"
}

shadowJar {
    relocate 'me.jishuna.jishlib', 'me.jishuna.minetweaks.libs.jishlib'
    minimize()
}

bukkit {
    name = 'MineTweaks'
    version = rootProject.version
    main = 'me.jishuna.minetweaks.MineTweaks'
    apiVersion = '1.20'
    authors = ['Jishuna']
    softDepend = ['ProtocolLib']
    
    commands {
        minetweaks {
            aliases = ['tweaks', 'mt']
            description = 'Base plugin command'
            permission = 'minetweaks.command'
        }
    }
    
    
    permissions {
        'minetweaks.command' {
            description = 'Allows the usage of /minetweaks'
            setDefault('TRUE')
        }
        'minetweaks.command.reload' {
            description = 'Allows the usage of /minetweaks reload'
            setDefault('OP')
        }
        'minetweaks.command.giveitem' {
            description = 'Allows the usage of /minetweaks giveitem'
            setDefault('OP')
        }
        'minetweaks.command.list' {
            description = 'Allows the usage of /minetweaks list'
            setDefault('TRUE')
        }
        'minetweaks.command.toggle' {
            description = 'Allows the usage of /minetweaks toggle'
            setDefault('TRUE')
        }
        'minetweaks.command.status' {
            description = 'Allows the usage of /minetweaks status'
            setDefault('TRUE')
        }
    }
}

build {
    dependsOn shadowJar
}